/*****************************************************************************

  CLASS C_Client

  Класс предоставляет функционал сетевого клиента.

  ОПИСАНИЕ  класс имеет один открытый для пользователей метод - workingSession, который
  создает и инициализирует сокет по протоколу UDP и отправляет запросы серверу, а затем
  ждет от него ответных данных. Логика взаимодействия клиента с сервером задается методом
  communication и при желаении может быть изменена. Весь необходимый от сокетов функционал
  для работы сервера предоставляется объектом m_socket, экземпляром класса C_Socket при
  получении запросов от клиента

*****************************************************************************/
#pragma once

#include <chrono>

#include "C_Socket.h"

namespace client {

/*****************************************************************************
  Macro Definitions
*****************************************************************************/

/*****************************************************************************
  Forward Declarations
*****************************************************************************/

/*****************************************************************************
  Types and Classes Definitions
*****************************************************************************/

class C_Client
{
public:
    bool setSockName(std::string a_sockName);

    // Запуск сокета клиента
    bool setupConnect(std::string a_ipAddr, int a_port, int a_type = SOCK_DGRAM,
                      int a_protocol = IPPROTO_UDP, int a_ipFamily = AF_INET , int a_optFlag = 1);

    // Процесс работы клиента
    bool workingSession();

    C_Client();
    ~C_Client() = default;

private:
    mySocket::C_Socket m_socket;          // объект обеспечивающий связь клиента с сервером
    const int          m_BufSize = 512;   // размер буфера сообщений клиента

    // старт сетевокого взаимодействия с сервером
    bool communication (int messPerSec, int workDuration);

};


/*****************************************************************************
  Functions Prototypes
*****************************************************************************/

/*****************************************************************************
  Variables Deсlarations
*****************************************************************************/


/*****************************************************************************
  Inline Functions Definitions
*****************************************************************************/


} // namespace client TODO

