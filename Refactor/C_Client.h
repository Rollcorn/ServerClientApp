
/*****************************************************************************

  CLASS предоставляет функционал сетевого клиента

  Модуль/Класс <TODO: краткое описание назначения в одном предложении> ... (должно быть идентично в .h и .cpp)

  ОПИСАНИЕ <TODO: описание функций и возможностей класса/модуля, форматов используемых данных и т.д., если не очевидно>

  * ...
  * ...
  * Описание протокола взаимоджействия см. в шапке protocol.h

  ИСПОЛЬЗОВАНИЕ <TODO: описания правил инициализации и использования, последовательности вызова интерфейсных функций,
                       ограничений и т.д., если не очевидно>

  * ...
  * ...
  * ...

  ПРИМЕЧАНИЯ <TODO: особенности и замечания, не вошедшие в предыдущие разделы (при необходимости)>

  * ...
  * ...
*****************************************************************************/
#pragma once

#include <chrono>

#include "C_Socket.h"

namespace client {

/*****************************************************************************
  Macro Definitions
*****************************************************************************/

/*****************************************************************************
  Forward Declarations
*****************************************************************************/

/*****************************************************************************
  Types and Classes Definitions
*****************************************************************************/

class C_Client
{
public:
    //Процесс работы клиента
    void workingSession();

    C_Client(std::string a_ipAddr, int a_port, std::string name);
    ~C_Client() = default;

private:
    mySocket::C_Socket m_socket;          //объект обеспечивающий связь клиента с сервером
    const int          m_BufSize = 512;   //размер буфера сообщений клиента

    //Запуск сокета клиента
    void setupConnect(unsigned long addr, int protocol);

    //старт сетевокого взаимодействия с сервером
    void communication (int messPerSec, int workDuration);


};


/*****************************************************************************
  Functions Prototypes
*****************************************************************************/

/*****************************************************************************
  Variables Deсlarations
*****************************************************************************/


/*****************************************************************************
  Inline Functions Definitions
*****************************************************************************/


} // namespace client TODO

