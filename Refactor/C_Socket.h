/*****************************************************************************

  MODULE_OR_CLASS <TODO: заменить на имя модуля/класса>

  Модуль/Класс <TODO: краткое описание назначения в одном предложении> ... (должно быть идентично в .h и .cpp)


  ОПИСАНИЕ <TODO: описание функций и возможностей класса/модуля, форматов используемых данных и т.д., если не очевидно>

  * ...
  * ...
  * ...


  ИСПОЛЬЗОВАНИЕ <TODO: описания правил инициализации и использования, последовательности вызова интерфейсных функций,
                       ограничений и т.д., если не очевидно>

  * ...
  * ...
  * ...


  ПРИМЕЧАНИЯ <TODO: особенности и замечания, не вошедшие в предыдущие разделы (при необходимости)>

  * ...
  * ...

  <TODO: при использовании тематических подразделов в разделах ОПИСАНИЕ, ИСПОЛЬЗОВАНИЕ
         выполнять их нумерацию в соответствии с уровнями вложенности.
         Тематические подразделы вводятся для описания различных аспектов функционирования,
         форматов используемых данных и пр.>

*****************************************************************************/

/*****************************************************************************
  Macro Definitions
*****************************************************************************/

#ifndef WINSOCK_INIT_H
#define WINSOCK_INIT_H

#ifndef WIN32_LEAN_AND_MEAN
#define WIN32_LEAN_AND_MEAN

#endif

#include <winsock2.h>
#include <windows.h>
#include <ws2tcpip.h>
#include <iphlpapi.h>
#include <iostream>
#include <thread>
#include <chrono>

namespace mySocket {
/*****************************************************************************
  Forward Declarations
*****************************************************************************/



/*****************************************************************************
  Types and Classes Definitions
*****************************************************************************/

class C_Socket
{

public:
    //Инициализация WinSock
    int initializingWinsock();

    //Создание/запуск сокета
    auto createSock(int a_family, int a_type, int a_ipProto);

    //Праметризация сокета
    void socketSettings( int a_family, int a_type, int a_ipProto);

    //Установка сокета в неблокирующий режим
    int setNonblock( int a_socketFd );

    //Cвязывание сокетв с локальным адресом протокола
    void makeBind();

    //Установление соединения(для ТСР)
    void makeConnect();

    //Установка в слушающий режим(для ТСР)
    void makeListen(int a_backlog);

    //Получение данныйх
    auto reciveData(char *a_dataStore, int a_dataStoreSize);

    //Отправка данных
    auto sendData(char *a_dataStore, int a_dataStorSize);

    //Закрытие сокета
    void disconnect();

    C_Socket(std::string a_port, std::string a_ipAddr );

    ~C_Socket() = default;


private:
    //Параметры соединения
    std::string m_servPort;         //Порт сервера
    std::string m_servIpAddr;       //IP адресс сервера
    struct sockaddr_in *m_servaddr; //Параметры соединения сервера
    struct sockaddr_in *m_cliaddr;  //Параметры соединения клиента

    struct m_UDP{
        int m_ipProto  = AF_INET;       //IP протокол соединения
        int m_type     = SOCK_DGRAM;    //тип соединения сокета
        int m_protocol = IPPROTO_UDP;   //протокол соединения сокета
    };

    //Данные сокета
    WSADATA m_wsadata;
    int     m_sockFd     = INVALID_SOCKET;  //Файловый дескриптор сокета

    int     m_serSockLen = sizeof(m_servaddr);
    int     m_cliSockLen = sizeof(m_cliaddr);

};

/*****************************************************************************
  Functions Prototypes
*****************************************************************************/

/*****************************************************************************
  Variables Deсlarations
*****************************************************************************/



/*****************************************************************************
  Inline Functions Definitions
*****************************************************************************/
}//mySocket
#endif // WINSOCK_INIT_H


