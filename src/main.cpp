/*****************************************************************************

  MODULE_OR_CLASS <TODO: заменить на имя модуля/класса>

  Модуль/Класс <TODO: краткое описание назначения в одном предложении> ... (должно быть идентично в .h и .cpp)


  РЕАЛИЗАЦИЯ <TODO: описание особенностей реализации и используемых   алгоритмов, если они не тривиальны и отсутствует документация>

  * ...
  * ...
  * ...


  ПРИМЕЧАНИЯ <TODO: особенности и замечания, не вошедшие в предыдущие разделы (при необходимости)>

  * ...
  * ...

  <TODO: при использовании тематических подразделов в разделе РЕАЛИЗАЦИЯ
         выполнять их нумерацию в соответствии с уровнями вложенности.
         Тематические подразделы вводятся для описания отдельных алгоритмов,
         форматов используемых данных и пр.>

*****************************************************************************/

#include <iostream>
#include <thread>

#include "C_Server.h"
#include "C_Client.h"

/*****************************************************************************
  Macro Definitions
*****************************************************************************/

/*****************************************************************************
  Forward Declarations
*****************************************************************************/

/*****************************************************************************
  Types and Classes Definitions
*****************************************************************************/

/*****************************************************************************
  Functions Prototypes
*****************************************************************************/

/*****************************************************************************
  Variables Definitions
*****************************************************************************/

/*****************************************************************************
  Functions Definitions
*****************************************************************************/

int main()
{
    std::string addr = "127.0.0.1";
    int         port = 8080;
    int bufferSize = 512;

    int messPerS     = 1;   // частота отправки запросов на сервевер (сообщений в секунду)
    int workDuration = 30;  // длительность работы клиента

    server::C_Server myServer;
    myServer.setSockName("Server");
    client::C_Client myClient;
    myClient.setSockName("Client");

    std::thread server_thread( [&]{ if ( myServer.setupConnect( addr, port ) )
                                         myServer.workingSession(bufferSize);
                                    else std::cout << "Server Setup ERROR!\n";
                                  } );

    std::thread client_thread( [&]{ if ( myClient.setupConnect( addr, port ) )
                                         myClient.workingSession(messPerS, workDuration);
                                    else std::cout << "Client Setup ERROR!\n";
                                  } );

    server_thread.join();
    client_thread.join();

    return 0;
}



